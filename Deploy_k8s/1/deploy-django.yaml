apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-django
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django-deployment
  template:
    metadata:
      labels:
        app: django-deployment
    spec:
      containers:
      - image: django_app
        imagePullPolicy: Never
        name: django-devman-image
        envFrom:
        - secretRef:
            name: my-secret
        ports:
        - containerPort: 80
          protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: deployment-django
  namespace: default
spec:
  selector:
    app: django-deployment
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devman-k8s-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: "star-burger.test"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: deployment-django
                port:
                  number: 80
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: job-clear-session
spec:
  schedule: "0 0 * * MON"
  startingDeadlineSeconds: 200
 # ttlSecondsAfterFinished: 100
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: clear-session
            image: django_app
            imagePullPolicy: Never
            envFrom:
            - secretRef:
                name: my-secret
            ports:
            - containerPort: 80
              protocol: TCP
            command:
            - /bin/sh
            - -c
            - date; echo Clear Session; python3 manage.py clearsessions
          restartPolicy: OnFailure
